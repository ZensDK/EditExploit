import customtkinter as ctk
import requests
import json

class CustomApp(ctk.CTk):
    CONFIG_FILE = "config.json"

    def __init__(self):
        super().__init__()
        self.title("zensware")
        self.geometry("250x160")
        self.attributes('-topmost', True)

        self.variables = {
            "Channel_ID": ctk.StringVar(),
            "Message_ID": ctk.StringVar(),
            "Message_Value": ctk.StringVar()
        }

        self.load_config()
        self.create_input_fields()
        ctk.CTkButton(self, text="Edit Message", command=self.send_request).grid(row=3, column=0, columnspan=2, pady=10)

    def load_config(self):
        try:
            with open(self.CONFIG_FILE, "r") as config_file:
                config_data = json.load(config_file)
                self.authorization_token = config_data.get("authorization_token", "")
        except FileNotFoundError:
            self.authorization_token = ""
        except json.JSONDecodeError:
            self.authorization_token = ""

    def create_input_fields(self):
        labels = ["Channel_ID", "Message_ID", "Message_Value"]
        for row, label_text in enumerate(labels):
            ctk.CTkLabel(self, text=f"{label_text}:").grid(row=row, column=0, padx=5, pady=5, sticky="w")
            ctk.CTkEntry(self, textvariable=self.variables[label_text]).grid(row=row, column=1, padx=5, pady=5)

    def send_request(self):
        channel_id, message_id, message_value = map(lambda x: x.get(), self.variables.values())

        url = f"https://discord.com/api/v9/channels/{channel_id}/messages"
        headers = self.get_request_headers()

        body = {
            "mobile_network_type": "unknown",
            "content": message_value,
            "nonce": message_id,
            "tts": False,
            "flags": 0
        }

        response = requests.post(url, headers=headers, json=body)

        self.print_response_info(response)

    def get_request_headers(self):
        return {
            "accept": "*/*",
            "accept-language": "da;q=0.6",
            "authorization": self.authorization_token,
            "content-type": "application/json",
            "sec-ch-ua": "\"Not_A Brand\";v=\"8\", \"Chromium\";v=\"120\", \"Brave\";v=\"120\"",
            "sec-ch-ua-mobile": "?0",
            "sec-ch-ua-platform": "\"Windows\"",
            "sec-fetch-dest": "empty",
            "sec-fetch-mode": "cors",
            "sec-fetch-site": "same-origin",
            "sec-gpc": "1",
            "x-debug-options": "bugReporterEnabled",
            "x-discord-locale": "en-GB",
            "x-discord-timezone": "Europe/London",
            "x-super-properties": None
        }

    def print_response_info(self, response):
        print(f"Request sent. Response status code: {response.status_code}")

        print("Response Headers:")
        for key, value in response.headers.items():
            print(f"{key}: {value}")

        print("Response Content:")
        print(response.text)

if __name__ == "__main__":
    app = CustomApp()
    app.mainloop()
